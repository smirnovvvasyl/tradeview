<view:DocumentViewBase x:Class="DevelopmentInProgress.TradeView.Wpf.Strategies.View.StrategyRunnerView"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                       xmlns:prism="http://prismlibrary.com/"
                       xmlns:model="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Common.Model;assembly=DevelopmentInProgress.TradeView.Wpf.Common"
                       xmlns:view="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Host.Controller.View;assembly=DevelopmentInProgress.TradeView.Wpf.Host.Controller"
                       xmlns:converters="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Controls.Converters;assembly=DevelopmentInProgress.TradeView.Wpf.Controls"
                       xmlns:progress="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Host.Controller.Controls.Progress;assembly=DevelopmentInProgress.TradeView.Wpf.Host.Controller"
                       xmlns:messaging="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Controls.Messaging;assembly=DevelopmentInProgress.TradeView.Wpf.Controls"
                       xmlns:localViewModel="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Strategies.ViewModel"
                       xmlns:localView="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Strategies.View"
                       xmlns:commonViewModel="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Common.ViewModel;assembly=DevelopmentInProgress.TradeView.Wpf.Common"
                       xmlns:commonView="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Common.View;assembly=DevelopmentInProgress.TradeView.Wpf.Common"
                       mc:Ignorable="d">
    <view:DocumentViewBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/DevelopmentInProgress.TradeView.Wpf.Common;component/Images/ImageResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type localViewModel:SymbolsViewModel}">
                <localView:SymbolsView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type commonViewModel:AccountViewModel}">
                <commonView:AccountView></commonView:AccountView>
            </DataTemplate>

            <DataTemplate DataType="{x:Type localViewModel:StrategyParametersViewModel}">
                <localView:StrategyParametersView></localView:StrategyParametersView>
            </DataTemplate>

            <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
            <converters:InvertBoolToVisibilityConverter x:Key="invertBoolToVisibilityConverter"/>

            <DataTemplate DataType="{x:Type model:ServerMonitor}">
                <DockPanel LastChildFill="true">
                    <Grid DockPanel.Dock="Left" Margin="2,0,10,0">
                        <DockPanel>
                            <Image DockPanel.Dock="Left" Source="../Images/Running.png" ToolTip="Running" 
                                                   MaxHeight="10" MaxWidth="10" VerticalAlignment="Center"
                                                   Visibility="{Binding IsConnected, Converter={StaticResource boolToVisibilityConverter}}"/>
                            <Image DockPanel.Dock="Left" Source="../Images/NotRunning.png" ToolTip="Not Running" 
                                                   MaxHeight="10" MaxWidth="10" VerticalAlignment="Center"
                                                   Visibility="{Binding IsConnected, Converter={StaticResource invertBoolToVisibilityConverter}}"/>
                        </DockPanel>
                    </Grid>
                    <Label DockPanel.Dock="Left" Content="{Binding Name}"/>
                </DockPanel>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type model:Strategy}">
                <DockPanel LastChildFill="True">
                    <Label DockPanel.Dock="Top" VerticalAlignment="Center" VerticalContentAlignment="Center" Content="{Binding Name}" Height="30" Margin="2" FontWeight="Bold"/>
                    <ComboBox DockPanel.Dock="Left" Margin="2" Width="250" Height="30"
                              IsReadOnly="True"
                              IsEditable="False"
                              IsSynchronizedWithCurrentItem="True"
                              Visibility="{Binding Path=DataContext.IsConnected, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}, Converter={StaticResource invertBoolToVisibilityConverter}}"
                              ItemsSource="{Binding Path=DataContext.Servers, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}}"
                              SelectedItem="{Binding Path=DataContext.SelectedServer, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}}">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>
                    <ContentControl DockPanel.Dock="Left" Margin="6,2,2,2" Width="250" Height="30" VerticalAlignment="Center"
                                    Content="{Binding Path=DataContext.SelectedServer, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}}"
                                    Visibility="{Binding Path=DataContext.IsConnected, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}, Converter={StaticResource boolToVisibilityConverter}}"/>
                    <Button DockPanel.Dock="Right" Margin="2" Height="18" Width="18" Padding="0,0.5,1,0"
                            Style="{StaticResource ButtonImageStyle}"
                            ToolTip="Run Strategy"
                            Command="{Binding Path=DataContext.RunCommand, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}}"
                            CommandParameter="{Binding}"
                            Visibility="{Binding Path=DataContext.CanRun, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}, Converter={StaticResource boolToVisibilityConverter}}">
                        <Control Template="{StaticResource runstrategy}"/>
                    </Button>
                    <Button DockPanel.Dock="Right" Margin="2" Height="18" Width="18" Padding="0,0.5,1,0"
                            Style="{StaticResource ButtonImageStyle}"
                            Command="{Binding Path=DataContext.MonitorCommand, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}}"
                            CommandParameter="{Binding}"
                            ToolTip="Monitor Strategy"
                            Visibility="{Binding Path=DataContext.CanMonitor, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}, Converter={StaticResource boolToVisibilityConverter}}">
                        <Control Template="{StaticResource monitorstrategy}"/>
                    </Button>
                    <Viewbox DockPanel.Dock="Right" Margin="2"
                             Height="18" Width="18"
                             Visibility="{Binding Path=DataContext.IsConnecting, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}, Converter={StaticResource boolToVisibilityConverter}}">
                        <progress:CircularProgress/>
                    </Viewbox>
                    <Button DockPanel.Dock="Right" Margin="2" Height="18" Width="18" Padding="0,0.5,1,0"
                            Style="{StaticResource ButtonImageStyle}"
                            Command="{Binding Path=DataContext.DisconnectCommand, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}}"
                            CommandParameter="{Binding}"
                            ToolTip="Disconnect (leaves strategy running)"
                            Visibility="{Binding Path=DataContext.IsConnected, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}, Converter={StaticResource boolToVisibilityConverter}}">
                        <Control Template="{StaticResource disconnect}"/>
                    </Button>
                    <Button DockPanel.Dock="Right" Margin="2" Height="18" Width="18" Padding="0,0.5,1,0"
                            Style="{StaticResource ButtonImageStyle}"
                            ToolTip="Stop Strategy"
                            Command="{Binding Path=DataContext.StopCommand, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}}"
                            CommandParameter="{Binding}"
                            Visibility="{Binding Path=DataContext.IsConnected, RelativeSource={RelativeSource AncestorType={x:Type view:DocumentViewBase}}, Converter={StaticResource boolToVisibilityConverter}}">
                        <Control Template="{StaticResource stopstrategy}"/>
                    </Button>
                    <ContentControl/>
                </DockPanel>
            </DataTemplate>
            
        </ResourceDictionary>
    </view:DocumentViewBase.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="65*"/>
            <RowDefinition Height="2"/>
            <RowDefinition Height="35*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="29*"/>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition Width="71*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="60*"/>
                <RowDefinition Height="2"/>
                <RowDefinition Height="40*"/>
            </Grid.RowDefinitions>

            <GroupBox Grid.Row="0" Grid.Column="0" Margin="2" Style="{StaticResource GroupBoxNoHeaderStyle}">
                <ContentControl Content="{Binding Strategy}"/>
            </GroupBox>

            <DockPanel Grid.Row="1" Grid.Column="0" LastChildFill="True">
                <ContentControl Content="{Binding SymbolsViewModel}"/>
            </DockPanel>

            <GridSplitter Grid.Row="2" Grid.Column="0" Height="2" HorizontalAlignment="Stretch" ResizeDirection="Rows" ResizeBehavior="PreviousAndNext"/>

            <DockPanel Grid.Row="3" Grid.Column="0" LastChildFill="True">
                <ContentControl Content="{Binding StrategyParametersViewModel}"/>
            </DockPanel>
            
            <GridSplitter Grid.Row="0" Grid.Column="1" Grid.RowSpan="4" Width="2" VerticalAlignment="Stretch" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext"/>

            <DockPanel Grid.Row="0" Grid.Column="2" Grid.RowSpan="4" LastChildFill="True">
                <ContentControl Name="StrategyDisplayContent"/>
            </DockPanel>

        </Grid>

        <GridSplitter Grid.Row="1" Height="2" HorizontalAlignment="Stretch" ResizeDirection="Rows" ResizeBehavior="PreviousAndNext"/>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70*"/>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition Width="30*"/>
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Column="0" LastChildFill="True">
                <ContentControl Content="{Binding AccountViewModel}"/>
            </DockPanel>

            <GridSplitter Grid.Column="1" Width="2" VerticalAlignment="Stretch" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext"/>

            <GroupBox Grid.Column="2" Margin="2" Style="{StaticResource GroupBoxNoHeaderStyle}">
                <messaging:MessagePanel HeaderBackground="Transparent"
                                    HeaderText="Notifications"
                                    Messages="{Binding Notifications}" 
                                    ClearMessages="{Binding ClearNotificationsCommand}" 
                                    IsExpanded="True"
                                    ShowMessageTextAlignment="Left"
                                    Margin="2"/>
            </GroupBox>
            
        </Grid>
       
    </Grid>
</view:DocumentViewBase>
