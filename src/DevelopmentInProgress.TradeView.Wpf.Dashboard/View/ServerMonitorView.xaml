<view:DocumentViewBase x:Class="DevelopmentInProgress.TradeView.Wpf.Dashboard.View.ServerMonitorView"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                       xmlns:view="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Host.Controller.View;assembly=DevelopmentInProgress.TradeView.Wpf.Host.Controller"
                       xmlns:converters="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Host.Controller.Converters;assembly=DevelopmentInProgress.TradeView.Wpf.Host.Controller"
                       xmlns:progress="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Host.Controller.Controls.Progress;assembly=DevelopmentInProgress.TradeView.Wpf.Host.Controller"
                       xmlns:model="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Common.Model;assembly=DevelopmentInProgress.TradeView.Wpf.Common"
                       xmlns:localConverters="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Dashboard.Converters"
                       xmlns:filterbox="clr-namespace:DevelopmentInProgress.TradeView.Wpf.Controls.FilterBox;assembly=DevelopmentInProgress.TradeView.Wpf.Controls"
                       mc:Ignorable="d">
    <view:DocumentViewBase.Resources>

        <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <converters:InvertBoolToVisibilityConverter x:Key="invertBoolToVisibilityConverter"/>
        <localConverters:ItemsCountToTextConverter x:Key="itemsCountToTextConverter"/>

        <Style x:Key="DashboardExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="rectangle" Width="30" Height="30" Fill="Transparent" HorizontalAlignment="Center" Stroke="{StaticResource ExpanderButtonBorderBrush}" StrokeThickness="0" VerticalAlignment="Center" />
                                <Path x:Name="arrow" Width="10" Height="6" Fill="{StaticResource GlyphBackgroundBrush}" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Fill" RenderTransformOrigin="0.5, 0.5" />
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Stretch" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M3.4,-4.4 L6.8,3.9 3.9566912E-07,3.9 z" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="Transparent" />
                                <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowHoverBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                                <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowPressedBorderBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="DashboardExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="14.667" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource DashboardExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ExpanderDisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <DataTemplate DataType="{x:Type model:ServerMonitor}">
            <Border BorderThickness="1" BorderBrush="#FF454545" Margin="2">
                <DockPanel LastChildFill="True">
                    <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                        <Image DockPanel.Dock="Left" Source="../Images/Server.png" ToolTip="{Binding Name}" Margin="2" MaxHeight="20" MaxWidth="20" VerticalAlignment="Center"/>
                        <Label DockPanel.Dock="Left" Content="{Binding Name}" FontWeight="Bold" Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        <Viewbox DockPanel.Dock="Left" Height="10" Width="10" Margin="2" HorizontalAlignment="Center"
                                 Visibility="{Binding IsConnecting, Converter={StaticResource boolToVisibilityConverter}}">
                            <progress:CircularProgress />
                        </Viewbox>
                        <Grid DockPanel.Dock="Left" Visibility="{Binding IsConnecting, Converter={StaticResource invertBoolToVisibilityConverter}}">
                            <DockPanel>
                                <Image DockPanel.Dock="Left" Source="../Images/Running.png" ToolTip="Running" 
                                       Margin="2" MaxHeight="10" MaxWidth="10" VerticalAlignment="Center"
                                       Visibility="{Binding IsConnected, Converter={StaticResource boolToVisibilityConverter}}"/>
                                <Image DockPanel.Dock="Left" Source="../Images/NotRunning.png" ToolTip="Not Running" 
                                       Margin="2" MaxHeight="10" MaxWidth="10" VerticalAlignment="Center"
                                       Visibility="{Binding IsConnected, Converter={StaticResource invertBoolToVisibilityConverter}}"/>
                            </DockPanel>
                        </Grid>
                        <ContentControl/>
                    </DockPanel>
                    <DockPanel LastChildFill="True" Margin="50,0,0,0">
                        <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                            <Label DockPanel.Dock="Left" Content="Uri       " Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                            <Label Content="{Binding Uri}" Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        </DockPanel>
                        <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                            <Label DockPanel.Dock="Left" Content="Started By" Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                            <Label Content="{Binding StartedBy}" Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        </DockPanel>
                        <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                            <Label DockPanel.Dock="Left" Content="Started     " Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                            <Label Content="{Binding Started}" Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        </DockPanel>
                        <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                            <Label DockPanel.Dock="Left" Content="Strategies  " Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                            <Label Content="{Binding StrategyCount, Converter={StaticResource itemsCountToTextConverter}}" Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        </DockPanel>
                    </DockPanel>
                </DockPanel>
            </Border>
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type model:ServerStrategy}">
            <DockPanel LastChildFill="True" Margin="30,0,0,0">
                <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                    <Image DockPanel.Dock="Left" Source="../Images/Strategy.png" ToolTip="{Binding Name}" Margin="2" MaxHeight="20" MaxWidth="20" VerticalAlignment="Center"/>
                    <Label DockPanel.Dock="Left" Content="{Binding Name}" FontWeight="Bold" Margin="2" VerticalAlignment="Center" Background="Transparent"/>
                </DockPanel>
                <DockPanel LastChildFill="True" Margin="50,0,0,0">
                    <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                        <Label DockPanel.Dock="Left" Content="Started By" Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        <Label Content="{Binding StartedBy}" Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                    </DockPanel>
                    <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                        <Label DockPanel.Dock="Left" Content="Started     " Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        <Label Content="{Binding Started}" Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                    </DockPanel>
                    <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                        <Label DockPanel.Dock="Left" Content="Connections " Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        <Label Content="{Binding ConnectionCount, Converter={StaticResource itemsCountToTextConverter}}" Margin="2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                    </DockPanel>
                    <Expander Header="Parameters" DockPanel.Dock="Top"
                              Style="{StaticResource DashboardExpanderStyle}">
                        <Grid>
                            <TextBlock Text="{Binding Parameters}" Margin="50,0,0,0" TextWrapping="Wrap"/>
                        </Grid>
                    </Expander>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type model:Connection}">
            <DockPanel LastChildFill="True" Margin="50,0,0,0">
                <Image Source="../Images/Connection.png" ToolTip="{Binding Name}" Margin="2" MaxHeight="20" MaxWidth="20" VerticalAlignment="Center"/>
                <Label Content="{Binding Name}" Margin="2" VerticalAlignment="Center" Background="Transparent"/>
            </DockPanel>
        </DataTemplate>
        
    </view:DocumentViewBase.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="33*"/>
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="33*"/>
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="34*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <GroupBox Style="{StaticResource GroupBoxNoHeaderStyle}">
                <DockPanel LastChildFill="True">
                    <Label DockPanel.Dock="Top" Content="Servers" Height="30" FontWeight="Bold" FontSize="14" HorizontalAlignment="Left"/>
                    <filterbox:XamlFilterBox DockPanel.Dock="Top" ItemsSource="{Binding Servers}" FilterFieldName="Name" Margin="2"/>
                    <Grid>
                        <Viewbox Height="50" Width="50" Margin="2" HorizontalAlignment="Center"
                             Visibility="{Binding IsLoadingServers, Converter={StaticResource boolToVisibilityConverter}}">
                            <progress:CircularProgress />
                        </Viewbox>
                        <ListView ItemsSource="{Binding Servers}" 
                                      SelectionMode="Single" BorderThickness="0" Background="Transparent"
                                      SelectedItem="{Binding SelectedServer}"
                                      Visibility="{Binding IsLoadingServers, Converter={StaticResource invertBoolToVisibilityConverter}}">
                            <ListView.Template>
                                <ControlTemplate>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                        <ItemsPresenter></ItemsPresenter>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ListView.Template>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="Visibility" Value="{Binding Path=IsVisible, Converter={StaticResource boolToVisibilityConverter}}"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
                </DockPanel>
            </GroupBox>
        </Grid>

        <GridSplitter Grid.Column="1" Width="2" VerticalAlignment="Stretch" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext"/>

        <Grid Grid.Column="2">
            <GroupBox Style="{StaticResource GroupBoxNoHeaderStyle}">
                <DockPanel LastChildFill="True">
                    <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                        <Label DockPanel.Dock="Left" Height="30" FontWeight="Bold" FontSize="14" HorizontalAlignment="Left" Content="Strategies"/>
                        <Label Height="30" FontWeight="Bold" FontSize="14" HorizontalAlignment="Left" Content="{Binding SelectedServer.Name}"/>
                    </DockPanel>
                    <filterbox:XamlFilterBox DockPanel.Dock="Top" ItemsSource="{Binding SelectedServer.Strategies}" FilterFieldName="Name" Margin="2"/>
                    <Grid>
                        <ListView ItemsSource="{Binding SelectedServer.Strategies}" 
                                      SelectionMode="Single" BorderThickness="0" Background="Transparent"
                                      SelectedItem="{Binding SelectedServerStrategy}"
                                      Visibility="{Binding IsLoadingServers, Converter={StaticResource invertBoolToVisibilityConverter}}">
                            <ListView.Template>
                                <ControlTemplate>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                        <ItemsPresenter></ItemsPresenter>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ListView.Template>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="Visibility" Value="{Binding Path=IsVisible, Converter={StaticResource boolToVisibilityConverter}}"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
                </DockPanel>
            </GroupBox>
        </Grid>

        <GridSplitter Grid.Column="3" Width="2" VerticalAlignment="Stretch" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext"/>

        <Grid Grid.Column="4">
            <GroupBox Style="{StaticResource GroupBoxNoHeaderStyle}">
                <DockPanel LastChildFill="True">
                    <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                        <Label DockPanel.Dock="Left" Height="30" FontWeight="Bold" FontSize="14" HorizontalAlignment="Left" Content="Connections"/>
                        <Label Height="30" FontWeight="Bold" FontSize="14" HorizontalAlignment="Left" Content="{Binding SelectedServerStrategy.Name}"/>
                    </DockPanel>
                    <filterbox:XamlFilterBox DockPanel.Dock="Top" ItemsSource="{Binding SelectedServerStrategy.Connections}" FilterFieldName="Name" Margin="2"/>
                    <Grid>
                        <ListView ItemsSource="{Binding SelectedServerStrategy.Connections}" 
                                      SelectionMode="Single" BorderThickness="0" Background="Transparent"
                                      Visibility="{Binding IsLoadingServers, Converter={StaticResource invertBoolToVisibilityConverter}}">
                            <ListView.Template>
                                <ControlTemplate>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                        <ItemsPresenter></ItemsPresenter>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ListView.Template>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="Visibility" Value="{Binding Path=IsVisible, Converter={StaticResource boolToVisibilityConverter}}"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
                </DockPanel>
            </GroupBox>
        </Grid>

    </Grid>
</view:DocumentViewBase>
